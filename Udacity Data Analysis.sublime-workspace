{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Dict",
				"DictReader"
			],
			[
				"out",
				"output_bad"
			],
			[
				"o",
				"OUTPUT_BAD"
			],
			[
				"ou",
				"OUTPUT_GOOD"
			],
			[
				"new",
				"new_file"
			],
			[
				"file",
				"filename"
			],
			[
				"u",
				"utf-8"
			],
			[
				"re",
				"records"
			],
			[
				"te",
				"temp_dict"
			],
			[
				"do",
				"domestic"
			],
			[
				"el",
				"elif"
			],
			[
				"fie",
				"field"
			],
			[
				"header",
				"headers"
			],
			[
				"f",
				"fields"
			],
			[
				"header_",
				"header_row"
			],
			[
				"dta",
				"data_row"
			],
			[
				"data",
				"data_rows"
			],
			[
				"carr",
				"carriers"
			],
			[
				"__",
				"__EVENTVALIDATION"
			],
			[
				"vi",
				"viewstate_element"
			],
			[
				"op",
				"options"
			],
			[
				"options",
				"option_values"
			],
			[
				"ao",
				"author"
			],
			[
				"lt",
				"lt0"
			],
			[
				"title",
				"titles"
			],
			[
				"S",
				"Station"
			],
			[
				"max",
				"maxtime"
			],
			[
				"cv",
				"cvmax"
			],
			[
				"Coa",
				"COASTMaxRtime"
			],
			[
				"coast",
				"COASTMax"
			],
			[
				"SOUTH",
				"SOUTH_C"
			],
			[
				"NORTH_",
				"NORTH_C"
			],
			[
				"coa",
				"COASTMaxTime"
			],
			[
				"cost",
				"COASTMax"
			]
		]
	},
	"buffers":
	[
		{
			"file": "P3/Data Quality/validity.py",
			"settings":
			{
				"buffer_size": 1731,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "P3/Data Quality/autos.csv",
			"settings":
			{
				"buffer_size": 81121,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"pakcage",
				"Package Control: Remove Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"packain",
				"Package Control: Install Package"
			],
			[
				"list ",
				"Package Control: List Packages"
			],
			[
				"packa",
				"Install Package Control"
			],
			[
				"prefer",
				"Preferences: Settings"
			],
			[
				"build",
				"Build With: C++ Single File - Run"
			]
		],
		"width": 485.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/anavgupta/Udacity_Data_Analysis",
		"/home/anavgupta/Udacity_Data_Analysis/P3",
		"/home/anavgupta/Udacity_Data_Analysis/P3/Data Quality"
	],
	"file_history":
	[
		"/home/anavgupta/.config/sublime-text-3/Packages/User/SideBarEnhancements/Open With/Side Bar.sublime-menu",
		"/home/anavgupta/Udacity_Data_Analysis/Udacity Data Analysis.sublime-project",
		"/home/anavgupta/Udacity_Data_Analysis/audit.py",
		"/home/anavgupta/Udacity_Data_Analysis/split_data.py",
		"/home/anavgupta/Udacity_Data_Analysis/split_data",
		"/home/anavgupta/Udacity_Data_Analysis/patent.data",
		"/home/anavgupta/Udacity_Data_Analysis/carriers.py",
		"/home/anavgupta/Udacity_Data_Analysis/airports.py",
		"/home/anavgupta/Udacity_Data_Analysis/extract_carries.py",
		"/home/anavgupta/Udacity_Data_Analysis/process.py",
		"/home/anavgupta/Udacity_Data_Analysis/data/FL-ATL.html",
		"/home/anavgupta/Udacity_Data_Analysis/FL-ATL.html",
		"/home/anavgupta/Udacity_Data_Analysis/Data Elements_files/jquery.js",
		"/home/anavgupta/Udacity_Data_Analysis/authors.py",
		"/home/anavgupta/Udacity_Data_Analysis/options.html",
		"/home/anavgupta/Udacity_Data_Analysis/request_flights_data.py",
		"/home/anavgupta/Udacity_Data_Analysis/html_soup.py",
		"/home/anavgupta/Udacity_Data_Analysis/nytimes.py",
		"/home/anavgupta/Udacity_Data_Analysis/popular-viewed-1.json",
		"/home/anavgupta/Udacity_Data_Analysis/working_with_csv.py",
		"/home/anavgupta/Desktop/xls_to_csv.py",
		"/home/anavgupta/Desktop/a.py",
		"/home/anavgupta/Downloads/musicbrainz.py",
		"/home/anavgupta/Downloads/intro_to_xlrd.py",
		"/home/anavgupta/Dropbox/coding/Sphere Online Judge (SPOJ) - Problems_files/analytics.js",
		"/home/anavgupta/Downloads/eggs.csv",
		"/home/anavgupta/Dropbox/coding/runningTime.cpp",
		"/home/anavgupta/Dropbox/coding/beehives/behives.cpp"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"<?xml ",
			"<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
			"<?xml",
			"dataTDRight",
			"graphics8",
			"Opinion",
			"Opinon",
			"return",
			"while (x--) {\n\t\tint size;\n\t\tcin >> size;\n\t\tlong long sum = 0;\n\t\tfor (int i = 0; i < size; i++) {\n\t\t\tlong long t;\n\t\t\tcin >> t;\n\t\t\tsum += t;\n\t\t}",
			"cases",
			"void calculate(int army1, int army2);\nvoid sorting(int no[]);\n",
			"for i in range(1, 10):\n        cv = sheet.col_values(i, start_rowx=1, end_rowx=None)\n        cvmax = max(cv)\n        maxtime = xlrd.xldate_as_tuple \\\n            (sheet.cel_values(i, cv.index(cvmax) + 1))\n        data[]\n    return data\n",
			"void calculate(int army1, int army2);\nvoid sorting(int no[]);\nint main(void)\n{\n    int cases;\n\n}",
			"COAST",
			"#"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"void calculate(int army1, int army2);\nvoid sorting(int no[]);\n",
			"for i in range(1, 10):\n        cv = sheet.col_values(i, start_rowx=1, end_rowx=None)\n        cvmax = max(cv)\n        maxtime = xlrd.xldate_as_tuple \\\n            (sheet.cel_values(i, cv.index(cvmax) + 1))\n        data[]\n    return data\n",
			"oid calculate(int army1, int army2);\nvoid sorting(int no[]);\nint main(void)\n{",
			"void calculate(int army1, int army2);\n"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "P3/Data Quality/validity.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1731,
						"regions":
						{
						},
						"selection":
						[
							[
								1379,
								1379
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 93.0,
						"translation.y": 378.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "P3/Data Quality/autos.csv",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 81121,
						"regions":
						{
						},
						"selection":
						[
							[
								564,
								564
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 118.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "Udacity Data Analysis.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Udacity_Data_Analysis/Udacity Data Analysis.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 392.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
